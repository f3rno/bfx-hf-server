'use strict';

const dbRL = require('../../../db/pg_rate_limited');
const tfToString = require('../../../exchange_clients/binance/util/tf_to_string');

module.exports = async (symbol, tf, candles) => {
  return dbRL(async db => {
    return db.transaction(trx => {
      return db(`binance_candles_${tfToString(tf)}`).
      insert(candles.map(c => ({
        symbol,
        mts: +c.openTime,
        open: `${c.open}`,
        close: `${c.close}`,
        high: `${c.high}`,
        low: `${c.low}`,
        volume: `${c.volume}`,
        key: `${symbol}-${c.openTime}` }))).

      transacting(trx).
      then(trx.commit).
      catch(trx.rollback);
    });
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy93b3JrZXJzL21hcmtldF9kYXRhX3N5bmMvYmluYW5jZS9pbnNlcnRfY2FuZGxlcy5qcyJdLCJuYW1lcyI6WyJkYlJMIiwicmVxdWlyZSIsInRmVG9TdHJpbmciLCJtb2R1bGUiLCJleHBvcnRzIiwic3ltYm9sIiwidGYiLCJjYW5kbGVzIiwiZGIiLCJ0cmFuc2FjdGlvbiIsInRyeCIsImluc2VydCIsIm1hcCIsImMiLCJtdHMiLCJvcGVuVGltZSIsIm9wZW4iLCJjbG9zZSIsImhpZ2giLCJsb3ciLCJ2b2x1bWUiLCJrZXkiLCJ0cmFuc2FjdGluZyIsInRoZW4iLCJjb21taXQiLCJjYXRjaCIsInJvbGxiYWNrIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxNQUFNQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyw2QkFBRCxDQUFwQjtBQUNBLE1BQU1DLFVBQVUsR0FBR0QsT0FBTyxDQUFDLHFEQUFELENBQTFCOztBQUVBRSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsT0FBT0MsTUFBUCxFQUFlQyxFQUFmLEVBQW1CQyxPQUFuQixLQUErQjtBQUM5QyxTQUFPUCxJQUFJLENBQUMsTUFBT1EsRUFBUCxJQUFjO0FBQ3hCLFdBQU9BLEVBQUUsQ0FBQ0MsV0FBSCxDQUFlQyxHQUFHLElBQUk7QUFDM0IsYUFBT0YsRUFBRSxDQUFFLG1CQUFrQk4sVUFBVSxDQUFDSSxFQUFELENBQUssRUFBbkMsQ0FBRjtBQUNKSyxNQUFBQSxNQURJLENBQ0dKLE9BQU8sQ0FBQ0ssR0FBUixDQUFZQyxDQUFDLEtBQUs7QUFDeEJSLFFBQUFBLE1BRHdCO0FBRXhCUyxRQUFBQSxHQUFHLEVBQUUsQ0FBQ0QsQ0FBQyxDQUFDRSxRQUZnQjtBQUd4QkMsUUFBQUEsSUFBSSxFQUFHLEdBQUVILENBQUMsQ0FBQ0csSUFBSyxFQUhRO0FBSXhCQyxRQUFBQSxLQUFLLEVBQUcsR0FBRUosQ0FBQyxDQUFDSSxLQUFNLEVBSk07QUFLeEJDLFFBQUFBLElBQUksRUFBRyxHQUFFTCxDQUFDLENBQUNLLElBQUssRUFMUTtBQU14QkMsUUFBQUEsR0FBRyxFQUFHLEdBQUVOLENBQUMsQ0FBQ00sR0FBSSxFQU5VO0FBT3hCQyxRQUFBQSxNQUFNLEVBQUcsR0FBRVAsQ0FBQyxDQUFDTyxNQUFPLEVBUEk7QUFReEJDLFFBQUFBLEdBQUcsRUFBRyxHQUFFaEIsTUFBTyxJQUFHUSxDQUFDLENBQUNFLFFBQVMsRUFSTCxFQUFMLENBQWIsQ0FESDs7QUFXSk8sTUFBQUEsV0FYSSxDQVdRWixHQVhSO0FBWUphLE1BQUFBLElBWkksQ0FZQ2IsR0FBRyxDQUFDYyxNQVpMO0FBYUpDLE1BQUFBLEtBYkksQ0FhRWYsR0FBRyxDQUFDZ0IsUUFiTixDQUFQO0FBY0QsS0FmTSxDQUFQO0FBZ0JELEdBakJVLENBQVg7QUFrQkQsQ0FuQkQiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuY29uc3QgZGJSTCA9IHJlcXVpcmUoJy4uLy4uLy4uL2RiL3BnX3JhdGVfbGltaXRlZCcpXG5jb25zdCB0ZlRvU3RyaW5nID0gcmVxdWlyZSgnLi4vLi4vLi4vZXhjaGFuZ2VfY2xpZW50cy9iaW5hbmNlL3V0aWwvdGZfdG9fc3RyaW5nJylcblxubW9kdWxlLmV4cG9ydHMgPSBhc3luYyAoc3ltYm9sLCB0ZiwgY2FuZGxlcykgPT4ge1xuICByZXR1cm4gZGJSTChhc3luYyAoZGIpID0+IHtcbiAgICByZXR1cm4gZGIudHJhbnNhY3Rpb24odHJ4ID0+IHtcbiAgICAgIHJldHVybiBkYihgYmluYW5jZV9jYW5kbGVzXyR7dGZUb1N0cmluZyh0Zil9YClcbiAgICAgICAgLmluc2VydChjYW5kbGVzLm1hcChjID0+ICh7XG4gICAgICAgICAgc3ltYm9sLFxuICAgICAgICAgIG10czogK2Mub3BlblRpbWUsXG4gICAgICAgICAgb3BlbjogYCR7Yy5vcGVufWAsXG4gICAgICAgICAgY2xvc2U6IGAke2MuY2xvc2V9YCxcbiAgICAgICAgICBoaWdoOiBgJHtjLmhpZ2h9YCxcbiAgICAgICAgICBsb3c6IGAke2MubG93fWAsXG4gICAgICAgICAgdm9sdW1lOiBgJHtjLnZvbHVtZX1gLFxuICAgICAgICAgIGtleTogYCR7c3ltYm9sfS0ke2Mub3BlblRpbWV9YFxuICAgICAgICB9KSkpXG4gICAgICAgIC50cmFuc2FjdGluZyh0cngpXG4gICAgICAgIC50aGVuKHRyeC5jb21taXQpXG4gICAgICAgIC5jYXRjaCh0cngucm9sbGJhY2spXG4gICAgfSlcbiAgfSlcbn1cbiJdfQ==