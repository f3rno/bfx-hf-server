'use strict';

const AES = require('aes-js');
const { get: getCredentials } = require('../db/credentials');
const genAESKey = require('./gen_aes_key');

module.exports = async (db, hashedPassword) => {
  const credentials = await getCredentials(db);
  const key = await genAESKey(hashedPassword);

  const aesCTR = new AES.ModeOfOperation.ctr(key); // eslint-disable-line
  const hashedPasswordBytes = AES.utils.utf8.toBytes(hashedPassword);
  const controlBytes = AES.utils.utf8.toBytes('control');
  const cipherText = AES.utils.hex.fromBytes(aesCTR.encrypt(hashedPasswordBytes));
  const cipherControl = AES.utils.hex.fromBytes(aesCTR.encrypt(controlBytes));

  if (cipherControl === credentials.key && cipherText === credentials.secret) {
    return cipherControl;
  }

  return null;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsL3ZlcmlmeV9wYXNzd29yZC5qcyJdLCJuYW1lcyI6WyJBRVMiLCJyZXF1aXJlIiwiZ2V0IiwiZ2V0Q3JlZGVudGlhbHMiLCJnZW5BRVNLZXkiLCJtb2R1bGUiLCJleHBvcnRzIiwiZGIiLCJoYXNoZWRQYXNzd29yZCIsImNyZWRlbnRpYWxzIiwia2V5IiwiYWVzQ1RSIiwiTW9kZU9mT3BlcmF0aW9uIiwiY3RyIiwiaGFzaGVkUGFzc3dvcmRCeXRlcyIsInV0aWxzIiwidXRmOCIsInRvQnl0ZXMiLCJjb250cm9sQnl0ZXMiLCJjaXBoZXJUZXh0IiwiaGV4IiwiZnJvbUJ5dGVzIiwiZW5jcnlwdCIsImNpcGhlckNvbnRyb2wiLCJzZWNyZXQiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLE1BQU1BLEdBQUcsR0FBR0MsT0FBTyxDQUFDLFFBQUQsQ0FBbkI7QUFDQSxNQUFNLEVBQUVDLEdBQUcsRUFBRUMsY0FBUCxLQUEwQkYsT0FBTyxDQUFDLG1CQUFELENBQXZDO0FBQ0EsTUFBTUcsU0FBUyxHQUFHSCxPQUFPLENBQUMsZUFBRCxDQUF6Qjs7QUFFQUksTUFBTSxDQUFDQyxPQUFQLEdBQWlCLE9BQU9DLEVBQVAsRUFBV0MsY0FBWCxLQUE4QjtBQUM3QyxRQUFNQyxXQUFXLEdBQUcsTUFBTU4sY0FBYyxDQUFDSSxFQUFELENBQXhDO0FBQ0EsUUFBTUcsR0FBRyxHQUFHLE1BQU1OLFNBQVMsQ0FBQ0ksY0FBRCxDQUEzQjs7QUFFQSxRQUFNRyxNQUFNLEdBQUcsSUFBSVgsR0FBRyxDQUFDWSxlQUFKLENBQW9CQyxHQUF4QixDQUE0QkgsR0FBNUIsQ0FBZixDQUo2QyxDQUlHO0FBQ2hELFFBQU1JLG1CQUFtQixHQUFHZCxHQUFHLENBQUNlLEtBQUosQ0FBVUMsSUFBVixDQUFlQyxPQUFmLENBQXVCVCxjQUF2QixDQUE1QjtBQUNBLFFBQU1VLFlBQVksR0FBR2xCLEdBQUcsQ0FBQ2UsS0FBSixDQUFVQyxJQUFWLENBQWVDLE9BQWYsQ0FBdUIsU0FBdkIsQ0FBckI7QUFDQSxRQUFNRSxVQUFVLEdBQUduQixHQUFHLENBQUNlLEtBQUosQ0FBVUssR0FBVixDQUFjQyxTQUFkLENBQXdCVixNQUFNLENBQUNXLE9BQVAsQ0FBZVIsbUJBQWYsQ0FBeEIsQ0FBbkI7QUFDQSxRQUFNUyxhQUFhLEdBQUd2QixHQUFHLENBQUNlLEtBQUosQ0FBVUssR0FBVixDQUFjQyxTQUFkLENBQXdCVixNQUFNLENBQUNXLE9BQVAsQ0FBZUosWUFBZixDQUF4QixDQUF0Qjs7QUFFQSxNQUFJSyxhQUFhLEtBQUtkLFdBQVcsQ0FBQ0MsR0FBOUIsSUFBcUNTLFVBQVUsS0FBS1YsV0FBVyxDQUFDZSxNQUFwRSxFQUE0RTtBQUMxRSxXQUFPRCxhQUFQO0FBQ0Q7O0FBRUQsU0FBTyxJQUFQO0FBQ0QsQ0FmRCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5jb25zdCBBRVMgPSByZXF1aXJlKCdhZXMtanMnKVxuY29uc3QgeyBnZXQ6IGdldENyZWRlbnRpYWxzIH0gPSByZXF1aXJlKCcuLi9kYi9jcmVkZW50aWFscycpXG5jb25zdCBnZW5BRVNLZXkgPSByZXF1aXJlKCcuL2dlbl9hZXNfa2V5JylcblxubW9kdWxlLmV4cG9ydHMgPSBhc3luYyAoZGIsIGhhc2hlZFBhc3N3b3JkKSA9PiB7XG4gIGNvbnN0IGNyZWRlbnRpYWxzID0gYXdhaXQgZ2V0Q3JlZGVudGlhbHMoZGIpXG4gIGNvbnN0IGtleSA9IGF3YWl0IGdlbkFFU0tleShoYXNoZWRQYXNzd29yZClcblxuICBjb25zdCBhZXNDVFIgPSBuZXcgQUVTLk1vZGVPZk9wZXJhdGlvbi5jdHIoa2V5KSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4gIGNvbnN0IGhhc2hlZFBhc3N3b3JkQnl0ZXMgPSBBRVMudXRpbHMudXRmOC50b0J5dGVzKGhhc2hlZFBhc3N3b3JkKVxuICBjb25zdCBjb250cm9sQnl0ZXMgPSBBRVMudXRpbHMudXRmOC50b0J5dGVzKCdjb250cm9sJylcbiAgY29uc3QgY2lwaGVyVGV4dCA9IEFFUy51dGlscy5oZXguZnJvbUJ5dGVzKGFlc0NUUi5lbmNyeXB0KGhhc2hlZFBhc3N3b3JkQnl0ZXMpKVxuICBjb25zdCBjaXBoZXJDb250cm9sID0gQUVTLnV0aWxzLmhleC5mcm9tQnl0ZXMoYWVzQ1RSLmVuY3J5cHQoY29udHJvbEJ5dGVzKSlcblxuICBpZiAoY2lwaGVyQ29udHJvbCA9PT0gY3JlZGVudGlhbHMua2V5ICYmIGNpcGhlclRleHQgPT09IGNyZWRlbnRpYWxzLnNlY3JldCkge1xuICAgIHJldHVybiBjaXBoZXJDb250cm9sXG4gIH1cblxuICByZXR1cm4gbnVsbFxufVxuIl19