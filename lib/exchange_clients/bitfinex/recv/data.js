'use strict';

const dataHandlers = require('./data_handlers');

module.exports = (exa, msg) => {
  const { ws, d, channelMap, dataListeners } = exa;
  const [chanID, potentialHB] = msg;

  if (potentialHB === 'hb') {// don't pass heartbeats
    return;
  }

  const channel = channelMap[`${chanID}`];

  if (!channel) {
    d('error, recv data for unknown channel %s: %j', chanID, msg);
    d('unsubscribing...');

    ws.unsubscribe(chanID);
    return;
  }

  const type = channel.channel;

  if (!dataHandlers[type]) {
    return d('recv data for unknown channel type: %s', type);
  }

  const payloads = dataHandlers[type](exa, msg, channel);

  if (payloads.length === 0) {
    return;
  }

  // bitfinex sends latest channel data immediately after subscribing
  // give subscription promises a chance to resolve
  setTimeout(() => {
    for (let i = 0; i < dataListeners.length; i += 1) {
      for (let j = 0; j < payloads.length; j += 1) {
        dataListeners[i](chanID, payloads[j]);
      }
    }
  }, 0);
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9leGNoYW5nZV9jbGllbnRzL2JpdGZpbmV4L3JlY3YvZGF0YS5qcyJdLCJuYW1lcyI6WyJkYXRhSGFuZGxlcnMiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImV4YSIsIm1zZyIsIndzIiwiZCIsImNoYW5uZWxNYXAiLCJkYXRhTGlzdGVuZXJzIiwiY2hhbklEIiwicG90ZW50aWFsSEIiLCJjaGFubmVsIiwidW5zdWJzY3JpYmUiLCJ0eXBlIiwicGF5bG9hZHMiLCJsZW5ndGgiLCJzZXRUaW1lb3V0IiwiaSIsImoiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLE1BQU1BLFlBQVksR0FBR0MsT0FBTyxDQUFDLGlCQUFELENBQTVCOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEtBQWM7QUFDN0IsUUFBTSxFQUFFQyxFQUFGLEVBQU1DLENBQU4sRUFBU0MsVUFBVCxFQUFxQkMsYUFBckIsS0FBdUNMLEdBQTdDO0FBQ0EsUUFBTSxDQUFDTSxNQUFELEVBQVNDLFdBQVQsSUFBd0JOLEdBQTlCOztBQUVBLE1BQUlNLFdBQVcsS0FBSyxJQUFwQixFQUEwQixDQUFFO0FBQzFCO0FBQ0Q7O0FBRUQsUUFBTUMsT0FBTyxHQUFHSixVQUFVLENBQUUsR0FBRUUsTUFBTyxFQUFYLENBQTFCOztBQUVBLE1BQUksQ0FBQ0UsT0FBTCxFQUFjO0FBQ1pMLElBQUFBLENBQUMsQ0FBQyw2Q0FBRCxFQUFnREcsTUFBaEQsRUFBd0RMLEdBQXhELENBQUQ7QUFDQUUsSUFBQUEsQ0FBQyxDQUFDLGtCQUFELENBQUQ7O0FBRUFELElBQUFBLEVBQUUsQ0FBQ08sV0FBSCxDQUFlSCxNQUFmO0FBQ0E7QUFDRDs7QUFFRCxRQUFNSSxJQUFJLEdBQUdGLE9BQU8sQ0FBQ0EsT0FBckI7O0FBRUEsTUFBSSxDQUFDWixZQUFZLENBQUNjLElBQUQsQ0FBakIsRUFBeUI7QUFDdkIsV0FBT1AsQ0FBQyxDQUFDLHdDQUFELEVBQTJDTyxJQUEzQyxDQUFSO0FBQ0Q7O0FBRUQsUUFBTUMsUUFBUSxHQUFHZixZQUFZLENBQUNjLElBQUQsQ0FBWixDQUFtQlYsR0FBbkIsRUFBd0JDLEdBQXhCLEVBQTZCTyxPQUE3QixDQUFqQjs7QUFFQSxNQUFJRyxRQUFRLENBQUNDLE1BQVQsS0FBb0IsQ0FBeEIsRUFBMkI7QUFDekI7QUFDRDs7QUFFRDtBQUNBO0FBQ0FDLEVBQUFBLFVBQVUsQ0FBQyxNQUFNO0FBQ2YsU0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHVCxhQUFhLENBQUNPLE1BQWxDLEVBQTBDRSxDQUFDLElBQUksQ0FBL0MsRUFBa0Q7QUFDaEQsV0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHSixRQUFRLENBQUNDLE1BQTdCLEVBQXFDRyxDQUFDLElBQUksQ0FBMUMsRUFBNkM7QUFDM0NWLFFBQUFBLGFBQWEsQ0FBQ1MsQ0FBRCxDQUFiLENBQWlCUixNQUFqQixFQUF5QkssUUFBUSxDQUFDSSxDQUFELENBQWpDO0FBQ0Q7QUFDRjtBQUNGLEdBTlMsRUFNUCxDQU5PLENBQVY7QUFPRCxDQXZDRCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5jb25zdCBkYXRhSGFuZGxlcnMgPSByZXF1aXJlKCcuL2RhdGFfaGFuZGxlcnMnKVxuXG5tb2R1bGUuZXhwb3J0cyA9IChleGEsIG1zZykgPT4ge1xuICBjb25zdCB7IHdzLCBkLCBjaGFubmVsTWFwLCBkYXRhTGlzdGVuZXJzIH0gPSBleGFcbiAgY29uc3QgW2NoYW5JRCwgcG90ZW50aWFsSEJdID0gbXNnXG5cbiAgaWYgKHBvdGVudGlhbEhCID09PSAnaGInKSB7IC8vIGRvbid0IHBhc3MgaGVhcnRiZWF0c1xuICAgIHJldHVyblxuICB9XG5cbiAgY29uc3QgY2hhbm5lbCA9IGNoYW5uZWxNYXBbYCR7Y2hhbklEfWBdXG5cbiAgaWYgKCFjaGFubmVsKSB7XG4gICAgZCgnZXJyb3IsIHJlY3YgZGF0YSBmb3IgdW5rbm93biBjaGFubmVsICVzOiAlaicsIGNoYW5JRCwgbXNnKVxuICAgIGQoJ3Vuc3Vic2NyaWJpbmcuLi4nKVxuXG4gICAgd3MudW5zdWJzY3JpYmUoY2hhbklEKVxuICAgIHJldHVyblxuICB9XG5cbiAgY29uc3QgdHlwZSA9IGNoYW5uZWwuY2hhbm5lbFxuXG4gIGlmICghZGF0YUhhbmRsZXJzW3R5cGVdKSB7XG4gICAgcmV0dXJuIGQoJ3JlY3YgZGF0YSBmb3IgdW5rbm93biBjaGFubmVsIHR5cGU6ICVzJywgdHlwZSlcbiAgfVxuXG4gIGNvbnN0IHBheWxvYWRzID0gZGF0YUhhbmRsZXJzW3R5cGVdKGV4YSwgbXNnLCBjaGFubmVsKVxuXG4gIGlmIChwYXlsb2Fkcy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm5cbiAgfVxuXG4gIC8vIGJpdGZpbmV4IHNlbmRzIGxhdGVzdCBjaGFubmVsIGRhdGEgaW1tZWRpYXRlbHkgYWZ0ZXIgc3Vic2NyaWJpbmdcbiAgLy8gZ2l2ZSBzdWJzY3JpcHRpb24gcHJvbWlzZXMgYSBjaGFuY2UgdG8gcmVzb2x2ZVxuICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGRhdGFMaXN0ZW5lcnMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgcGF5bG9hZHMubGVuZ3RoOyBqICs9IDEpIHtcbiAgICAgICAgZGF0YUxpc3RlbmVyc1tpXShjaGFuSUQsIHBheWxvYWRzW2pdKVxuICAgICAgfVxuICAgIH1cbiAgfSwgMClcbn1cbiJdfQ==