'use strict';

const chanDataToKey = require('../../util/chan_data_to_key');
const chanDataToSubscribePacket = require('./util/chan_data_to_subscribe_packet');

module.exports = (exa, channelData) => {
  const { d, ws, subs, channelMap } = exa;

  const cdKey = chanDataToKey(channelData);
  const chanID = subs[cdKey];

  if (!chanID) {
    throw new Error('tried to unsub from unknown channel');
  }

  d('unsubscribing from channel %s', chanID);

  const filter = chanDataToSubscribePacket(channelData);

  switch (channelData[0]) {
    case 'candles':{
        ws.managedUnsubscribe('candles', filter);
        break;
      }

    case 'ticker':{
        ws.managedUnsubscribe('ticker', filter);
        break;
      }

    case 'trades':{
        ws.managedUnsubscribe('trades', filter);
        break;
      }

    case 'book':{
        ws.managedUnsubscribe('book', filter[0]);
        break;
      }

    default:{
        throw new Error(`unknown channel type: ${channelData.join(', ')}`);
      }}


  delete subs[cdKey];
  delete channelMap[`${chanID}`];

  return chanID;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9leGNoYW5nZV9jbGllbnRzL2JpdGZpbmV4L3Vuc3Vic2NyaWJlLmpzIl0sIm5hbWVzIjpbImNoYW5EYXRhVG9LZXkiLCJyZXF1aXJlIiwiY2hhbkRhdGFUb1N1YnNjcmliZVBhY2tldCIsIm1vZHVsZSIsImV4cG9ydHMiLCJleGEiLCJjaGFubmVsRGF0YSIsImQiLCJ3cyIsInN1YnMiLCJjaGFubmVsTWFwIiwiY2RLZXkiLCJjaGFuSUQiLCJFcnJvciIsImZpbHRlciIsIm1hbmFnZWRVbnN1YnNjcmliZSIsImpvaW4iXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLE1BQU1BLGFBQWEsR0FBR0MsT0FBTyxDQUFDLDZCQUFELENBQTdCO0FBQ0EsTUFBTUMseUJBQXlCLEdBQUdELE9BQU8sQ0FBQyxzQ0FBRCxDQUF6Qzs7QUFFQUUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLENBQUNDLEdBQUQsRUFBTUMsV0FBTixLQUFzQjtBQUNyQyxRQUFNLEVBQUVDLENBQUYsRUFBS0MsRUFBTCxFQUFTQyxJQUFULEVBQWVDLFVBQWYsS0FBOEJMLEdBQXBDOztBQUVBLFFBQU1NLEtBQUssR0FBR1gsYUFBYSxDQUFDTSxXQUFELENBQTNCO0FBQ0EsUUFBTU0sTUFBTSxHQUFHSCxJQUFJLENBQUNFLEtBQUQsQ0FBbkI7O0FBRUEsTUFBSSxDQUFDQyxNQUFMLEVBQWE7QUFDWCxVQUFNLElBQUlDLEtBQUosQ0FBVSxxQ0FBVixDQUFOO0FBQ0Q7O0FBRUROLEVBQUFBLENBQUMsQ0FBQywrQkFBRCxFQUFrQ0ssTUFBbEMsQ0FBRDs7QUFFQSxRQUFNRSxNQUFNLEdBQUdaLHlCQUF5QixDQUFDSSxXQUFELENBQXhDOztBQUVBLFVBQVFBLFdBQVcsQ0FBQyxDQUFELENBQW5CO0FBQ0UsU0FBSyxTQUFMLENBQWdCO0FBQ2RFLFFBQUFBLEVBQUUsQ0FBQ08sa0JBQUgsQ0FBc0IsU0FBdEIsRUFBaUNELE1BQWpDO0FBQ0E7QUFDRDs7QUFFRCxTQUFLLFFBQUwsQ0FBZTtBQUNiTixRQUFBQSxFQUFFLENBQUNPLGtCQUFILENBQXNCLFFBQXRCLEVBQWdDRCxNQUFoQztBQUNBO0FBQ0Q7O0FBRUQsU0FBSyxRQUFMLENBQWU7QUFDYk4sUUFBQUEsRUFBRSxDQUFDTyxrQkFBSCxDQUFzQixRQUF0QixFQUFnQ0QsTUFBaEM7QUFDQTtBQUNEOztBQUVELFNBQUssTUFBTCxDQUFhO0FBQ1hOLFFBQUFBLEVBQUUsQ0FBQ08sa0JBQUgsQ0FBc0IsTUFBdEIsRUFBOEJELE1BQU0sQ0FBQyxDQUFELENBQXBDO0FBQ0E7QUFDRDs7QUFFRCxZQUFTO0FBQ1AsY0FBTSxJQUFJRCxLQUFKLENBQVcseUJBQXdCUCxXQUFXLENBQUNVLElBQVosQ0FBaUIsSUFBakIsQ0FBdUIsRUFBMUQsQ0FBTjtBQUNELE9BdkJIOzs7QUEwQkEsU0FBT1AsSUFBSSxDQUFDRSxLQUFELENBQVg7QUFDQSxTQUFPRCxVQUFVLENBQUUsR0FBRUUsTUFBTyxFQUFYLENBQWpCOztBQUVBLFNBQU9BLE1BQVA7QUFDRCxDQTVDRCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5jb25zdCBjaGFuRGF0YVRvS2V5ID0gcmVxdWlyZSgnLi4vLi4vdXRpbC9jaGFuX2RhdGFfdG9fa2V5JylcbmNvbnN0IGNoYW5EYXRhVG9TdWJzY3JpYmVQYWNrZXQgPSByZXF1aXJlKCcuL3V0aWwvY2hhbl9kYXRhX3RvX3N1YnNjcmliZV9wYWNrZXQnKVxuXG5tb2R1bGUuZXhwb3J0cyA9IChleGEsIGNoYW5uZWxEYXRhKSA9PiB7XG4gIGNvbnN0IHsgZCwgd3MsIHN1YnMsIGNoYW5uZWxNYXAgfSA9IGV4YVxuXG4gIGNvbnN0IGNkS2V5ID0gY2hhbkRhdGFUb0tleShjaGFubmVsRGF0YSlcbiAgY29uc3QgY2hhbklEID0gc3Vic1tjZEtleV1cblxuICBpZiAoIWNoYW5JRCkge1xuICAgIHRocm93IG5ldyBFcnJvcigndHJpZWQgdG8gdW5zdWIgZnJvbSB1bmtub3duIGNoYW5uZWwnKVxuICB9XG5cbiAgZCgndW5zdWJzY3JpYmluZyBmcm9tIGNoYW5uZWwgJXMnLCBjaGFuSUQpXG5cbiAgY29uc3QgZmlsdGVyID0gY2hhbkRhdGFUb1N1YnNjcmliZVBhY2tldChjaGFubmVsRGF0YSlcblxuICBzd2l0Y2ggKGNoYW5uZWxEYXRhWzBdKSB7XG4gICAgY2FzZSAnY2FuZGxlcyc6IHtcbiAgICAgIHdzLm1hbmFnZWRVbnN1YnNjcmliZSgnY2FuZGxlcycsIGZpbHRlcilcbiAgICAgIGJyZWFrXG4gICAgfVxuXG4gICAgY2FzZSAndGlja2VyJzoge1xuICAgICAgd3MubWFuYWdlZFVuc3Vic2NyaWJlKCd0aWNrZXInLCBmaWx0ZXIpXG4gICAgICBicmVha1xuICAgIH1cblxuICAgIGNhc2UgJ3RyYWRlcyc6IHtcbiAgICAgIHdzLm1hbmFnZWRVbnN1YnNjcmliZSgndHJhZGVzJywgZmlsdGVyKVxuICAgICAgYnJlYWtcbiAgICB9XG5cbiAgICBjYXNlICdib29rJzoge1xuICAgICAgd3MubWFuYWdlZFVuc3Vic2NyaWJlKCdib29rJywgZmlsdGVyWzBdKVxuICAgICAgYnJlYWtcbiAgICB9XG5cbiAgICBkZWZhdWx0OiB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYHVua25vd24gY2hhbm5lbCB0eXBlOiAke2NoYW5uZWxEYXRhLmpvaW4oJywgJyl9YClcbiAgICB9XG4gIH1cblxuICBkZWxldGUgc3Vic1tjZEtleV1cbiAgZGVsZXRlIGNoYW5uZWxNYXBbYCR7Y2hhbklEfWBdXG5cbiAgcmV0dXJuIGNoYW5JRFxufVxuIl19