'use strict';

const capture = require('../../../capture');
const nonce = require('../../../util/nonce');
const chanDataToKey = require('../../../util/chan_data_to_key');

const recvCandleData = require('../recv_data/candle');
const sendInitialCandleData = require('../send_initial_data/candle');

module.exports = (exa, channelData) => {
  const key = chanDataToKey(channelData);
  const [, tf, market] = channelData;
  const symbol = market.wsID;
  const chanID = nonce();
  const {
    d, candleChannelData, subs, unsubs, client } =
  exa;

  d('subscribing to candles channel %s:%s', symbol, tf);

  candleChannelData[chanID] = [tf, symbol];
  subs[key] = chanID;
  unsubs[key] = client.ws.candles(
  symbol, tf, candle => recvCandleData(exa, chanID, candle));


  setTimeout(() => {
    sendInitialCandleData(exa, channelData, chanID).catch(err => {
      capture.exception(err);
    });
  }, 0);

  return chanID;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9leGNoYW5nZV9jbGllbnRzL2JpbmFuY2Uvc3Vic2NyaWJlL2NhbmRsZXMuanMiXSwibmFtZXMiOlsiY2FwdHVyZSIsInJlcXVpcmUiLCJub25jZSIsImNoYW5EYXRhVG9LZXkiLCJyZWN2Q2FuZGxlRGF0YSIsInNlbmRJbml0aWFsQ2FuZGxlRGF0YSIsIm1vZHVsZSIsImV4cG9ydHMiLCJleGEiLCJjaGFubmVsRGF0YSIsImtleSIsInRmIiwibWFya2V0Iiwic3ltYm9sIiwid3NJRCIsImNoYW5JRCIsImQiLCJjYW5kbGVDaGFubmVsRGF0YSIsInN1YnMiLCJ1bnN1YnMiLCJjbGllbnQiLCJ3cyIsImNhbmRsZXMiLCJjYW5kbGUiLCJzZXRUaW1lb3V0IiwiY2F0Y2giLCJlcnIiLCJleGNlcHRpb24iXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLGtCQUFELENBQXZCO0FBQ0EsTUFBTUMsS0FBSyxHQUFHRCxPQUFPLENBQUMscUJBQUQsQ0FBckI7QUFDQSxNQUFNRSxhQUFhLEdBQUdGLE9BQU8sQ0FBQyxnQ0FBRCxDQUE3Qjs7QUFFQSxNQUFNRyxjQUFjLEdBQUdILE9BQU8sQ0FBQyxxQkFBRCxDQUE5QjtBQUNBLE1BQU1JLHFCQUFxQixHQUFHSixPQUFPLENBQUMsNkJBQUQsQ0FBckM7O0FBRUFLLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixDQUFDQyxHQUFELEVBQU1DLFdBQU4sS0FBc0I7QUFDckMsUUFBTUMsR0FBRyxHQUFHUCxhQUFhLENBQUNNLFdBQUQsQ0FBekI7QUFDQSxRQUFNLEdBQUdFLEVBQUgsRUFBT0MsTUFBUCxJQUFpQkgsV0FBdkI7QUFDQSxRQUFNSSxNQUFNLEdBQUdELE1BQU0sQ0FBQ0UsSUFBdEI7QUFDQSxRQUFNQyxNQUFNLEdBQUdiLEtBQUssRUFBcEI7QUFDQSxRQUFNO0FBQ0pjLElBQUFBLENBREksRUFDREMsaUJBREMsRUFDa0JDLElBRGxCLEVBQ3dCQyxNQUR4QixFQUNnQ0MsTUFEaEM7QUFFRlosRUFBQUEsR0FGSjs7QUFJQVEsRUFBQUEsQ0FBQyxDQUFDLHNDQUFELEVBQXlDSCxNQUF6QyxFQUFpREYsRUFBakQsQ0FBRDs7QUFFQU0sRUFBQUEsaUJBQWlCLENBQUNGLE1BQUQsQ0FBakIsR0FBNEIsQ0FBQ0osRUFBRCxFQUFLRSxNQUFMLENBQTVCO0FBQ0FLLEVBQUFBLElBQUksQ0FBQ1IsR0FBRCxDQUFKLEdBQVlLLE1BQVo7QUFDQUksRUFBQUEsTUFBTSxDQUFDVCxHQUFELENBQU4sR0FBY1UsTUFBTSxDQUFDQyxFQUFQLENBQVVDLE9BQVY7QUFDWlQsRUFBQUEsTUFEWSxFQUNKRixFQURJLEVBQ0NZLE1BQUQsSUFBWW5CLGNBQWMsQ0FBQ0ksR0FBRCxFQUFNTyxNQUFOLEVBQWNRLE1BQWQsQ0FEMUIsQ0FBZDs7O0FBSUFDLEVBQUFBLFVBQVUsQ0FBQyxNQUFNO0FBQ2ZuQixJQUFBQSxxQkFBcUIsQ0FBQ0csR0FBRCxFQUFNQyxXQUFOLEVBQW1CTSxNQUFuQixDQUFyQixDQUFnRFUsS0FBaEQsQ0FBdURDLEdBQUQsSUFBUztBQUM3RDFCLE1BQUFBLE9BQU8sQ0FBQzJCLFNBQVIsQ0FBa0JELEdBQWxCO0FBQ0QsS0FGRDtBQUdELEdBSlMsRUFJUCxDQUpPLENBQVY7O0FBTUEsU0FBT1gsTUFBUDtBQUNELENBeEJEIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbmNvbnN0IGNhcHR1cmUgPSByZXF1aXJlKCcuLi8uLi8uLi9jYXB0dXJlJylcbmNvbnN0IG5vbmNlID0gcmVxdWlyZSgnLi4vLi4vLi4vdXRpbC9ub25jZScpXG5jb25zdCBjaGFuRGF0YVRvS2V5ID0gcmVxdWlyZSgnLi4vLi4vLi4vdXRpbC9jaGFuX2RhdGFfdG9fa2V5JylcblxuY29uc3QgcmVjdkNhbmRsZURhdGEgPSByZXF1aXJlKCcuLi9yZWN2X2RhdGEvY2FuZGxlJylcbmNvbnN0IHNlbmRJbml0aWFsQ2FuZGxlRGF0YSA9IHJlcXVpcmUoJy4uL3NlbmRfaW5pdGlhbF9kYXRhL2NhbmRsZScpXG5cbm1vZHVsZS5leHBvcnRzID0gKGV4YSwgY2hhbm5lbERhdGEpID0+IHtcbiAgY29uc3Qga2V5ID0gY2hhbkRhdGFUb0tleShjaGFubmVsRGF0YSlcbiAgY29uc3QgWywgdGYsIG1hcmtldF0gPSBjaGFubmVsRGF0YVxuICBjb25zdCBzeW1ib2wgPSBtYXJrZXQud3NJRFxuICBjb25zdCBjaGFuSUQgPSBub25jZSgpXG4gIGNvbnN0IHtcbiAgICBkLCBjYW5kbGVDaGFubmVsRGF0YSwgc3VicywgdW5zdWJzLCBjbGllbnRcbiAgfSA9IGV4YVxuXG4gIGQoJ3N1YnNjcmliaW5nIHRvIGNhbmRsZXMgY2hhbm5lbCAlczolcycsIHN5bWJvbCwgdGYpXG5cbiAgY2FuZGxlQ2hhbm5lbERhdGFbY2hhbklEXSA9IFt0Ziwgc3ltYm9sXVxuICBzdWJzW2tleV0gPSBjaGFuSURcbiAgdW5zdWJzW2tleV0gPSBjbGllbnQud3MuY2FuZGxlcyhcbiAgICBzeW1ib2wsIHRmLCAoY2FuZGxlKSA9PiByZWN2Q2FuZGxlRGF0YShleGEsIGNoYW5JRCwgY2FuZGxlKVxuICApXG5cbiAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgc2VuZEluaXRpYWxDYW5kbGVEYXRhKGV4YSwgY2hhbm5lbERhdGEsIGNoYW5JRCkuY2F0Y2goKGVycikgPT4ge1xuICAgICAgY2FwdHVyZS5leGNlcHRpb24oZXJyKVxuICAgIH0pXG4gIH0sIDApXG5cbiAgcmV0dXJuIGNoYW5JRFxufVxuIl19