'use strict';

const capture = require('../../../capture');
const nonce = require('../../../util/nonce');
const chanDataToKey = require('../../../util/chan_data_to_key');

const recvTradeData = require('../recv_data/trade');
const sentInitialTradeData = require('../send_initial_data/trade');

module.exports = (exa, channelData) => {
  const { d, subs, unsubs, client } = exa;
  const key = chanDataToKey(channelData);
  const [, market] = channelData;
  const symbol = market.wsID;
  const chanID = nonce();

  d('subscribing to trades channel %s', symbol);

  subs[key] = chanID;
  unsubs[key] = client.ws.trades(
  symbol, trade => recvTradeData(exa, chanID, trade));


  setTimeout(() => {
    sentInitialTradeData(exa, channelData, chanID).catch(err => {
      capture.exception(err);
    });
  }, 0);

  return chanID;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9leGNoYW5nZV9jbGllbnRzL2JpbmFuY2Uvc3Vic2NyaWJlL3RyYWRlcy5qcyJdLCJuYW1lcyI6WyJjYXB0dXJlIiwicmVxdWlyZSIsIm5vbmNlIiwiY2hhbkRhdGFUb0tleSIsInJlY3ZUcmFkZURhdGEiLCJzZW50SW5pdGlhbFRyYWRlRGF0YSIsIm1vZHVsZSIsImV4cG9ydHMiLCJleGEiLCJjaGFubmVsRGF0YSIsImQiLCJzdWJzIiwidW5zdWJzIiwiY2xpZW50Iiwia2V5IiwibWFya2V0Iiwic3ltYm9sIiwid3NJRCIsImNoYW5JRCIsIndzIiwidHJhZGVzIiwidHJhZGUiLCJzZXRUaW1lb3V0IiwiY2F0Y2giLCJlcnIiLCJleGNlcHRpb24iXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLGtCQUFELENBQXZCO0FBQ0EsTUFBTUMsS0FBSyxHQUFHRCxPQUFPLENBQUMscUJBQUQsQ0FBckI7QUFDQSxNQUFNRSxhQUFhLEdBQUdGLE9BQU8sQ0FBQyxnQ0FBRCxDQUE3Qjs7QUFFQSxNQUFNRyxhQUFhLEdBQUdILE9BQU8sQ0FBQyxvQkFBRCxDQUE3QjtBQUNBLE1BQU1JLG9CQUFvQixHQUFHSixPQUFPLENBQUMsNEJBQUQsQ0FBcEM7O0FBRUFLLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixDQUFDQyxHQUFELEVBQU1DLFdBQU4sS0FBc0I7QUFDckMsUUFBTSxFQUFFQyxDQUFGLEVBQUtDLElBQUwsRUFBV0MsTUFBWCxFQUFtQkMsTUFBbkIsS0FBOEJMLEdBQXBDO0FBQ0EsUUFBTU0sR0FBRyxHQUFHWCxhQUFhLENBQUNNLFdBQUQsQ0FBekI7QUFDQSxRQUFNLEdBQUdNLE1BQUgsSUFBYU4sV0FBbkI7QUFDQSxRQUFNTyxNQUFNLEdBQUdELE1BQU0sQ0FBQ0UsSUFBdEI7QUFDQSxRQUFNQyxNQUFNLEdBQUdoQixLQUFLLEVBQXBCOztBQUVBUSxFQUFBQSxDQUFDLENBQUMsa0NBQUQsRUFBcUNNLE1BQXJDLENBQUQ7O0FBRUFMLEVBQUFBLElBQUksQ0FBQ0csR0FBRCxDQUFKLEdBQVlJLE1BQVo7QUFDQU4sRUFBQUEsTUFBTSxDQUFDRSxHQUFELENBQU4sR0FBY0QsTUFBTSxDQUFDTSxFQUFQLENBQVVDLE1BQVY7QUFDWkosRUFBQUEsTUFEWSxFQUNISyxLQUFELElBQVdqQixhQUFhLENBQUNJLEdBQUQsRUFBTVUsTUFBTixFQUFjRyxLQUFkLENBRHBCLENBQWQ7OztBQUlBQyxFQUFBQSxVQUFVLENBQUMsTUFBTTtBQUNmakIsSUFBQUEsb0JBQW9CLENBQUNHLEdBQUQsRUFBTUMsV0FBTixFQUFtQlMsTUFBbkIsQ0FBcEIsQ0FBK0NLLEtBQS9DLENBQXNEQyxHQUFELElBQVM7QUFDNUR4QixNQUFBQSxPQUFPLENBQUN5QixTQUFSLENBQWtCRCxHQUFsQjtBQUNELEtBRkQ7QUFHRCxHQUpTLEVBSVAsQ0FKTyxDQUFWOztBQU1BLFNBQU9OLE1BQVA7QUFDRCxDQXJCRCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5jb25zdCBjYXB0dXJlID0gcmVxdWlyZSgnLi4vLi4vLi4vY2FwdHVyZScpXG5jb25zdCBub25jZSA9IHJlcXVpcmUoJy4uLy4uLy4uL3V0aWwvbm9uY2UnKVxuY29uc3QgY2hhbkRhdGFUb0tleSA9IHJlcXVpcmUoJy4uLy4uLy4uL3V0aWwvY2hhbl9kYXRhX3RvX2tleScpXG5cbmNvbnN0IHJlY3ZUcmFkZURhdGEgPSByZXF1aXJlKCcuLi9yZWN2X2RhdGEvdHJhZGUnKVxuY29uc3Qgc2VudEluaXRpYWxUcmFkZURhdGEgPSByZXF1aXJlKCcuLi9zZW5kX2luaXRpYWxfZGF0YS90cmFkZScpXG5cbm1vZHVsZS5leHBvcnRzID0gKGV4YSwgY2hhbm5lbERhdGEpID0+IHtcbiAgY29uc3QgeyBkLCBzdWJzLCB1bnN1YnMsIGNsaWVudCB9ID0gZXhhXG4gIGNvbnN0IGtleSA9IGNoYW5EYXRhVG9LZXkoY2hhbm5lbERhdGEpXG4gIGNvbnN0IFssIG1hcmtldF0gPSBjaGFubmVsRGF0YVxuICBjb25zdCBzeW1ib2wgPSBtYXJrZXQud3NJRFxuICBjb25zdCBjaGFuSUQgPSBub25jZSgpXG5cbiAgZCgnc3Vic2NyaWJpbmcgdG8gdHJhZGVzIGNoYW5uZWwgJXMnLCBzeW1ib2wpXG5cbiAgc3Vic1trZXldID0gY2hhbklEXG4gIHVuc3Vic1trZXldID0gY2xpZW50LndzLnRyYWRlcyhcbiAgICBzeW1ib2wsICh0cmFkZSkgPT4gcmVjdlRyYWRlRGF0YShleGEsIGNoYW5JRCwgdHJhZGUpXG4gIClcblxuICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICBzZW50SW5pdGlhbFRyYWRlRGF0YShleGEsIGNoYW5uZWxEYXRhLCBjaGFuSUQpLmNhdGNoKChlcnIpID0+IHtcbiAgICAgIGNhcHR1cmUuZXhjZXB0aW9uKGVycilcbiAgICB9KVxuICB9LCAwKVxuXG4gIHJldHVybiBjaGFuSURcbn1cbiJdfQ==