'use strict';

const candleTransformer = require('../transformers/candle');
const propagateData = require('../propagate_data');
const candleWidth = require('../util/candle_width');

module.exports = (exa, chanID, candle) => {
  const { candleChannelData, lastFinalCandleForChannel } = exa;
  const { isFinal } = candle;
  const tf = candleChannelData[chanID][0];
  const last = lastFinalCandleForChannel[chanID];

  if (!isFinal && !last) {
    return; // we need at least 1 final candle to get mts
  }

  const mts = isFinal ?
  candle.startTime :
  (last.openTime || last.startTime) + candleWidth(tf);

  propagateData(exa, chanID, candleTransformer(candle, mts));

  if (isFinal) {
    lastFinalCandleForChannel[chanID] = candle;
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9leGNoYW5nZV9jbGllbnRzL2JpbmFuY2UvcmVjdl9kYXRhL2NhbmRsZS5qcyJdLCJuYW1lcyI6WyJjYW5kbGVUcmFuc2Zvcm1lciIsInJlcXVpcmUiLCJwcm9wYWdhdGVEYXRhIiwiY2FuZGxlV2lkdGgiLCJtb2R1bGUiLCJleHBvcnRzIiwiZXhhIiwiY2hhbklEIiwiY2FuZGxlIiwiY2FuZGxlQ2hhbm5lbERhdGEiLCJsYXN0RmluYWxDYW5kbGVGb3JDaGFubmVsIiwiaXNGaW5hbCIsInRmIiwibGFzdCIsIm10cyIsInN0YXJ0VGltZSIsIm9wZW5UaW1lIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxNQUFNQSxpQkFBaUIsR0FBR0MsT0FBTyxDQUFDLHdCQUFELENBQWpDO0FBQ0EsTUFBTUMsYUFBYSxHQUFHRCxPQUFPLENBQUMsbUJBQUQsQ0FBN0I7QUFDQSxNQUFNRSxXQUFXLEdBQUdGLE9BQU8sQ0FBQyxzQkFBRCxDQUEzQjs7QUFFQUcsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLENBQUNDLEdBQUQsRUFBTUMsTUFBTixFQUFjQyxNQUFkLEtBQXlCO0FBQ3hDLFFBQU0sRUFBRUMsaUJBQUYsRUFBcUJDLHlCQUFyQixLQUFtREosR0FBekQ7QUFDQSxRQUFNLEVBQUVLLE9BQUYsS0FBY0gsTUFBcEI7QUFDQSxRQUFNSSxFQUFFLEdBQUdILGlCQUFpQixDQUFDRixNQUFELENBQWpCLENBQTBCLENBQTFCLENBQVg7QUFDQSxRQUFNTSxJQUFJLEdBQUdILHlCQUF5QixDQUFDSCxNQUFELENBQXRDOztBQUVBLE1BQUksQ0FBQ0ksT0FBRCxJQUFZLENBQUNFLElBQWpCLEVBQXVCO0FBQ3JCLFdBRHFCLENBQ2Q7QUFDUjs7QUFFRCxRQUFNQyxHQUFHLEdBQUdILE9BQU87QUFDZkgsRUFBQUEsTUFBTSxDQUFDTyxTQURRO0FBRWYsR0FBQ0YsSUFBSSxDQUFDRyxRQUFMLElBQWlCSCxJQUFJLENBQUNFLFNBQXZCLElBQW9DWixXQUFXLENBQUNTLEVBQUQsQ0FGbkQ7O0FBSUFWLEVBQUFBLGFBQWEsQ0FBQ0ksR0FBRCxFQUFNQyxNQUFOLEVBQWNQLGlCQUFpQixDQUFDUSxNQUFELEVBQVNNLEdBQVQsQ0FBL0IsQ0FBYjs7QUFFQSxNQUFJSCxPQUFKLEVBQWE7QUFDWEQsSUFBQUEseUJBQXlCLENBQUNILE1BQUQsQ0FBekIsR0FBb0NDLE1BQXBDO0FBQ0Q7QUFDRixDQW5CRCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5jb25zdCBjYW5kbGVUcmFuc2Zvcm1lciA9IHJlcXVpcmUoJy4uL3RyYW5zZm9ybWVycy9jYW5kbGUnKVxuY29uc3QgcHJvcGFnYXRlRGF0YSA9IHJlcXVpcmUoJy4uL3Byb3BhZ2F0ZV9kYXRhJylcbmNvbnN0IGNhbmRsZVdpZHRoID0gcmVxdWlyZSgnLi4vdXRpbC9jYW5kbGVfd2lkdGgnKVxuXG5tb2R1bGUuZXhwb3J0cyA9IChleGEsIGNoYW5JRCwgY2FuZGxlKSA9PiB7XG4gIGNvbnN0IHsgY2FuZGxlQ2hhbm5lbERhdGEsIGxhc3RGaW5hbENhbmRsZUZvckNoYW5uZWwgfSA9IGV4YVxuICBjb25zdCB7IGlzRmluYWwgfSA9IGNhbmRsZVxuICBjb25zdCB0ZiA9IGNhbmRsZUNoYW5uZWxEYXRhW2NoYW5JRF1bMF1cbiAgY29uc3QgbGFzdCA9IGxhc3RGaW5hbENhbmRsZUZvckNoYW5uZWxbY2hhbklEXVxuXG4gIGlmICghaXNGaW5hbCAmJiAhbGFzdCkge1xuICAgIHJldHVybiAvLyB3ZSBuZWVkIGF0IGxlYXN0IDEgZmluYWwgY2FuZGxlIHRvIGdldCBtdHNcbiAgfVxuXG4gIGNvbnN0IG10cyA9IGlzRmluYWxcbiAgICA/IGNhbmRsZS5zdGFydFRpbWVcbiAgICA6IChsYXN0Lm9wZW5UaW1lIHx8IGxhc3Quc3RhcnRUaW1lKSArIGNhbmRsZVdpZHRoKHRmKVxuXG4gIHByb3BhZ2F0ZURhdGEoZXhhLCBjaGFuSUQsIGNhbmRsZVRyYW5zZm9ybWVyKGNhbmRsZSwgbXRzKSlcblxuICBpZiAoaXNGaW5hbCkge1xuICAgIGxhc3RGaW5hbENhbmRsZUZvckNoYW5uZWxbY2hhbklEXSA9IGNhbmRsZVxuICB9XG59XG4iXX0=