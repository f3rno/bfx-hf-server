'use strict';

const sendOrders = require('./send_orders');
const sendBalances = require('./send_balances');
const {
  notifyInfo,
  notifyErrorBinance } =
require('../../util/ws/notify');

module.exports = async (d, ws, binanceClient, orderPacket) => {
  notifyInfo(ws, 'Submitting order to Binance');

  try {
    await binanceClient.submitOrder(orderPacket);

    d('sucessfully submitted order [binance]');
  } catch (error) {
    d('failed to submit order [binance]');
    notifyErrorBinance(ws, error);
    return;
  }

  try {
    await sendBalances(ws, 'binance', binanceClient);
  } catch (error) {
    d(`failed to send balances [binance]: ${error.message}`);
    notifyErrorBinance(ws, error);
  }

  try {
    await sendOrders(ws, 'binance', binanceClient);
  } catch (error) {
    d(`failed to send orders [binance]: ${error.message}`);
    notifyErrorBinance(ws, error);
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy93c19zZXJ2ZXJzL2FwaS9zdWJtaXRfb3JkZXJfYmluYW5jZS5qcyJdLCJuYW1lcyI6WyJzZW5kT3JkZXJzIiwicmVxdWlyZSIsInNlbmRCYWxhbmNlcyIsIm5vdGlmeUluZm8iLCJub3RpZnlFcnJvckJpbmFuY2UiLCJtb2R1bGUiLCJleHBvcnRzIiwiZCIsIndzIiwiYmluYW5jZUNsaWVudCIsIm9yZGVyUGFja2V0Iiwic3VibWl0T3JkZXIiLCJlcnJvciIsIm1lc3NhZ2UiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLE1BQU1BLFVBQVUsR0FBR0MsT0FBTyxDQUFDLGVBQUQsQ0FBMUI7QUFDQSxNQUFNQyxZQUFZLEdBQUdELE9BQU8sQ0FBQyxpQkFBRCxDQUE1QjtBQUNBLE1BQU07QUFDSkUsRUFBQUEsVUFESTtBQUVKQyxFQUFBQSxrQkFGSTtBQUdGSCxPQUFPLENBQUMsc0JBQUQsQ0FIWDs7QUFLQUksTUFBTSxDQUFDQyxPQUFQLEdBQWlCLE9BQU9DLENBQVAsRUFBVUMsRUFBVixFQUFjQyxhQUFkLEVBQTZCQyxXQUE3QixLQUE2QztBQUM1RFAsRUFBQUEsVUFBVSxDQUFDSyxFQUFELEVBQUssNkJBQUwsQ0FBVjs7QUFFQSxNQUFJO0FBQ0YsVUFBTUMsYUFBYSxDQUFDRSxXQUFkLENBQTBCRCxXQUExQixDQUFOOztBQUVBSCxJQUFBQSxDQUFDLENBQUMsdUNBQUQsQ0FBRDtBQUNELEdBSkQsQ0FJRSxPQUFPSyxLQUFQLEVBQWM7QUFDZEwsSUFBQUEsQ0FBQyxDQUFDLGtDQUFELENBQUQ7QUFDQUgsSUFBQUEsa0JBQWtCLENBQUNJLEVBQUQsRUFBS0ksS0FBTCxDQUFsQjtBQUNBO0FBQ0Q7O0FBRUQsTUFBSTtBQUNGLFVBQU1WLFlBQVksQ0FBQ00sRUFBRCxFQUFLLFNBQUwsRUFBZ0JDLGFBQWhCLENBQWxCO0FBQ0QsR0FGRCxDQUVFLE9BQU9HLEtBQVAsRUFBYztBQUNkTCxJQUFBQSxDQUFDLENBQUUsc0NBQXFDSyxLQUFLLENBQUNDLE9BQVEsRUFBckQsQ0FBRDtBQUNBVCxJQUFBQSxrQkFBa0IsQ0FBQ0ksRUFBRCxFQUFLSSxLQUFMLENBQWxCO0FBQ0Q7O0FBRUQsTUFBSTtBQUNGLFVBQU1aLFVBQVUsQ0FBQ1EsRUFBRCxFQUFLLFNBQUwsRUFBZ0JDLGFBQWhCLENBQWhCO0FBQ0QsR0FGRCxDQUVFLE9BQU9HLEtBQVAsRUFBYztBQUNkTCxJQUFBQSxDQUFDLENBQUUsb0NBQW1DSyxLQUFLLENBQUNDLE9BQVEsRUFBbkQsQ0FBRDtBQUNBVCxJQUFBQSxrQkFBa0IsQ0FBQ0ksRUFBRCxFQUFLSSxLQUFMLENBQWxCO0FBQ0Q7QUFDRixDQTFCRCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5jb25zdCBzZW5kT3JkZXJzID0gcmVxdWlyZSgnLi9zZW5kX29yZGVycycpXG5jb25zdCBzZW5kQmFsYW5jZXMgPSByZXF1aXJlKCcuL3NlbmRfYmFsYW5jZXMnKVxuY29uc3Qge1xuICBub3RpZnlJbmZvLFxuICBub3RpZnlFcnJvckJpbmFuY2Vcbn0gPSByZXF1aXJlKCcuLi8uLi91dGlsL3dzL25vdGlmeScpXG5cbm1vZHVsZS5leHBvcnRzID0gYXN5bmMgKGQsIHdzLCBiaW5hbmNlQ2xpZW50LCBvcmRlclBhY2tldCkgPT4ge1xuICBub3RpZnlJbmZvKHdzLCAnU3VibWl0dGluZyBvcmRlciB0byBCaW5hbmNlJylcblxuICB0cnkge1xuICAgIGF3YWl0IGJpbmFuY2VDbGllbnQuc3VibWl0T3JkZXIob3JkZXJQYWNrZXQpXG5cbiAgICBkKCdzdWNlc3NmdWxseSBzdWJtaXR0ZWQgb3JkZXIgW2JpbmFuY2VdJylcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBkKCdmYWlsZWQgdG8gc3VibWl0IG9yZGVyIFtiaW5hbmNlXScpXG4gICAgbm90aWZ5RXJyb3JCaW5hbmNlKHdzLCBlcnJvcilcbiAgICByZXR1cm5cbiAgfVxuXG4gIHRyeSB7XG4gICAgYXdhaXQgc2VuZEJhbGFuY2VzKHdzLCAnYmluYW5jZScsIGJpbmFuY2VDbGllbnQpXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgZChgZmFpbGVkIHRvIHNlbmQgYmFsYW5jZXMgW2JpbmFuY2VdOiAke2Vycm9yLm1lc3NhZ2V9YClcbiAgICBub3RpZnlFcnJvckJpbmFuY2Uod3MsIGVycm9yKVxuICB9XG5cbiAgdHJ5IHtcbiAgICBhd2FpdCBzZW5kT3JkZXJzKHdzLCAnYmluYW5jZScsIGJpbmFuY2VDbGllbnQpXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgZChgZmFpbGVkIHRvIHNlbmQgb3JkZXJzIFtiaW5hbmNlXTogJHtlcnJvci5tZXNzYWdlfWApXG4gICAgbm90aWZ5RXJyb3JCaW5hbmNlKHdzLCBlcnJvcilcbiAgfVxufVxuIl19