'use strict';

const sendError = require('../../../util/ws/send_error');
const validateParams = require('../../../util/ws/validate_params');
const isAuthorized = require('../../../util/ws/is_authorized');

module.exports = async (server, ws, msg) => {
  const [, authToken, exID, gid] = msg;
  const validRequest = validateParams(ws, {
    exID: { type: 'string', v: exID },
    authToken: { type: 'string', v: authToken },
    gid: { type: 'string', v: gid } });


  if (!validRequest) {
    return;
  }

  if (!isAuthorized(ws, authToken)) {
    return sendError(ws, 'Unauthorized');
  } else if (exID !== 'bitfinex' && exID !== 'binance') {
    return sendError(ws, 'Algo orders currently only enabled for Bitfinex and Binance');
  } else if (!ws.aoc) {
    return sendError(ws, 'Unauthorized');
  }

  ws.aoc.stopAO(exID, gid);
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy93c19zZXJ2ZXJzL2FwaS9oYW5kbGVycy9vbl9hbGdvX29yZGVyX2NhbmNlbC5qcyJdLCJuYW1lcyI6WyJzZW5kRXJyb3IiLCJyZXF1aXJlIiwidmFsaWRhdGVQYXJhbXMiLCJpc0F1dGhvcml6ZWQiLCJtb2R1bGUiLCJleHBvcnRzIiwic2VydmVyIiwid3MiLCJtc2ciLCJhdXRoVG9rZW4iLCJleElEIiwiZ2lkIiwidmFsaWRSZXF1ZXN0IiwidHlwZSIsInYiLCJhb2MiLCJzdG9wQU8iXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLE1BQU1BLFNBQVMsR0FBR0MsT0FBTyxDQUFDLDZCQUFELENBQXpCO0FBQ0EsTUFBTUMsY0FBYyxHQUFHRCxPQUFPLENBQUMsa0NBQUQsQ0FBOUI7QUFDQSxNQUFNRSxZQUFZLEdBQUdGLE9BQU8sQ0FBQyxnQ0FBRCxDQUE1Qjs7QUFFQUcsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLE9BQU9DLE1BQVAsRUFBZUMsRUFBZixFQUFtQkMsR0FBbkIsS0FBMkI7QUFDMUMsUUFBTSxHQUFHQyxTQUFILEVBQWNDLElBQWQsRUFBb0JDLEdBQXBCLElBQTJCSCxHQUFqQztBQUNBLFFBQU1JLFlBQVksR0FBR1YsY0FBYyxDQUFDSyxFQUFELEVBQUs7QUFDdENHLElBQUFBLElBQUksRUFBRSxFQUFFRyxJQUFJLEVBQUUsUUFBUixFQUFrQkMsQ0FBQyxFQUFFSixJQUFyQixFQURnQztBQUV0Q0QsSUFBQUEsU0FBUyxFQUFFLEVBQUVJLElBQUksRUFBRSxRQUFSLEVBQWtCQyxDQUFDLEVBQUVMLFNBQXJCLEVBRjJCO0FBR3RDRSxJQUFBQSxHQUFHLEVBQUUsRUFBRUUsSUFBSSxFQUFFLFFBQVIsRUFBa0JDLENBQUMsRUFBRUgsR0FBckIsRUFIaUMsRUFBTCxDQUFuQzs7O0FBTUEsTUFBSSxDQUFDQyxZQUFMLEVBQW1CO0FBQ2pCO0FBQ0Q7O0FBRUQsTUFBSSxDQUFDVCxZQUFZLENBQUNJLEVBQUQsRUFBS0UsU0FBTCxDQUFqQixFQUFrQztBQUNoQyxXQUFPVCxTQUFTLENBQUNPLEVBQUQsRUFBSyxjQUFMLENBQWhCO0FBQ0QsR0FGRCxNQUVPLElBQUlHLElBQUksS0FBSyxVQUFULElBQXVCQSxJQUFJLEtBQUssU0FBcEMsRUFBK0M7QUFDcEQsV0FBT1YsU0FBUyxDQUFDTyxFQUFELEVBQUssNkRBQUwsQ0FBaEI7QUFDRCxHQUZNLE1BRUEsSUFBSSxDQUFDQSxFQUFFLENBQUNRLEdBQVIsRUFBYTtBQUNsQixXQUFPZixTQUFTLENBQUNPLEVBQUQsRUFBSyxjQUFMLENBQWhCO0FBQ0Q7O0FBRURBLEVBQUFBLEVBQUUsQ0FBQ1EsR0FBSCxDQUFPQyxNQUFQLENBQWNOLElBQWQsRUFBb0JDLEdBQXBCO0FBQ0QsQ0FyQkQiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuY29uc3Qgc2VuZEVycm9yID0gcmVxdWlyZSgnLi4vLi4vLi4vdXRpbC93cy9zZW5kX2Vycm9yJylcbmNvbnN0IHZhbGlkYXRlUGFyYW1zID0gcmVxdWlyZSgnLi4vLi4vLi4vdXRpbC93cy92YWxpZGF0ZV9wYXJhbXMnKVxuY29uc3QgaXNBdXRob3JpemVkID0gcmVxdWlyZSgnLi4vLi4vLi4vdXRpbC93cy9pc19hdXRob3JpemVkJylcblxubW9kdWxlLmV4cG9ydHMgPSBhc3luYyAoc2VydmVyLCB3cywgbXNnKSA9PiB7XG4gIGNvbnN0IFssIGF1dGhUb2tlbiwgZXhJRCwgZ2lkXSA9IG1zZ1xuICBjb25zdCB2YWxpZFJlcXVlc3QgPSB2YWxpZGF0ZVBhcmFtcyh3cywge1xuICAgIGV4SUQ6IHsgdHlwZTogJ3N0cmluZycsIHY6IGV4SUQgfSxcbiAgICBhdXRoVG9rZW46IHsgdHlwZTogJ3N0cmluZycsIHY6IGF1dGhUb2tlbiB9LFxuICAgIGdpZDogeyB0eXBlOiAnc3RyaW5nJywgdjogZ2lkIH1cbiAgfSlcblxuICBpZiAoIXZhbGlkUmVxdWVzdCkge1xuICAgIHJldHVyblxuICB9XG5cbiAgaWYgKCFpc0F1dGhvcml6ZWQod3MsIGF1dGhUb2tlbikpIHtcbiAgICByZXR1cm4gc2VuZEVycm9yKHdzLCAnVW5hdXRob3JpemVkJylcbiAgfSBlbHNlIGlmIChleElEICE9PSAnYml0ZmluZXgnICYmIGV4SUQgIT09ICdiaW5hbmNlJykge1xuICAgIHJldHVybiBzZW5kRXJyb3Iod3MsICdBbGdvIG9yZGVycyBjdXJyZW50bHkgb25seSBlbmFibGVkIGZvciBCaXRmaW5leCBhbmQgQmluYW5jZScpXG4gIH0gZWxzZSBpZiAoIXdzLmFvYykge1xuICAgIHJldHVybiBzZW5kRXJyb3Iod3MsICdVbmF1dGhvcml6ZWQnKVxuICB9XG5cbiAgd3MuYW9jLnN0b3BBTyhleElELCBnaWQpXG59XG4iXX0=