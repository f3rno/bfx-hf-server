'use strict';

const sendOrders = require('./send_orders');
const {
  notifyInfo,
  notifyOrderCancelled,
  notifyErrorBinance } =
require('../../util/ws/notify');

module.exports = async (d, ws, binanceClient, symbol, orderId) => {
  notifyInfo(ws, 'Cancelling order on Binance');

  try {
    const res = await binanceClient.cancelOrder({ symbol, orderId });

    d('sucessfully cancelleed order [binance]');
    notifyOrderCancelled(ws, 'binance', {
      symbol: res.symbol,
      amount: res.side === 'SELL' ? -1 * res.origQty : res.origQty,
      price: res.price,
      type: res.type });

  } catch (error) {
    d('failed to cancel order [binance]');
    notifyErrorBinance(ws, error);
    return;
  }

  try {
    await sendOrders(ws, 'binance', binanceClient);
  } catch (error) {
    d(`failed to send orders [binance]: ${error.message}`);
    notifyErrorBinance(ws, error);
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy93c19zZXJ2ZXJzL2FwaS9jYW5jZWxfb3JkZXJfYmluYW5jZS5qcyJdLCJuYW1lcyI6WyJzZW5kT3JkZXJzIiwicmVxdWlyZSIsIm5vdGlmeUluZm8iLCJub3RpZnlPcmRlckNhbmNlbGxlZCIsIm5vdGlmeUVycm9yQmluYW5jZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJkIiwid3MiLCJiaW5hbmNlQ2xpZW50Iiwic3ltYm9sIiwib3JkZXJJZCIsInJlcyIsImNhbmNlbE9yZGVyIiwiYW1vdW50Iiwic2lkZSIsIm9yaWdRdHkiLCJwcmljZSIsInR5cGUiLCJlcnJvciIsIm1lc3NhZ2UiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLE1BQU1BLFVBQVUsR0FBR0MsT0FBTyxDQUFDLGVBQUQsQ0FBMUI7QUFDQSxNQUFNO0FBQ0pDLEVBQUFBLFVBREk7QUFFSkMsRUFBQUEsb0JBRkk7QUFHSkMsRUFBQUEsa0JBSEk7QUFJRkgsT0FBTyxDQUFDLHNCQUFELENBSlg7O0FBTUFJLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixPQUFPQyxDQUFQLEVBQVVDLEVBQVYsRUFBY0MsYUFBZCxFQUE2QkMsTUFBN0IsRUFBcUNDLE9BQXJDLEtBQWlEO0FBQ2hFVCxFQUFBQSxVQUFVLENBQUNNLEVBQUQsRUFBSyw2QkFBTCxDQUFWOztBQUVBLE1BQUk7QUFDRixVQUFNSSxHQUFHLEdBQUcsTUFBTUgsYUFBYSxDQUFDSSxXQUFkLENBQTBCLEVBQUVILE1BQUYsRUFBVUMsT0FBVixFQUExQixDQUFsQjs7QUFFQUosSUFBQUEsQ0FBQyxDQUFDLHdDQUFELENBQUQ7QUFDQUosSUFBQUEsb0JBQW9CLENBQUNLLEVBQUQsRUFBSyxTQUFMLEVBQWdCO0FBQ2xDRSxNQUFBQSxNQUFNLEVBQUVFLEdBQUcsQ0FBQ0YsTUFEc0I7QUFFbENJLE1BQUFBLE1BQU0sRUFBRUYsR0FBRyxDQUFDRyxJQUFKLEtBQWEsTUFBYixHQUFzQixDQUFDLENBQUQsR0FBS0gsR0FBRyxDQUFDSSxPQUEvQixHQUF5Q0osR0FBRyxDQUFDSSxPQUZuQjtBQUdsQ0MsTUFBQUEsS0FBSyxFQUFFTCxHQUFHLENBQUNLLEtBSHVCO0FBSWxDQyxNQUFBQSxJQUFJLEVBQUVOLEdBQUcsQ0FBQ00sSUFKd0IsRUFBaEIsQ0FBcEI7O0FBTUQsR0FWRCxDQVVFLE9BQU9DLEtBQVAsRUFBYztBQUNkWixJQUFBQSxDQUFDLENBQUMsa0NBQUQsQ0FBRDtBQUNBSCxJQUFBQSxrQkFBa0IsQ0FBQ0ksRUFBRCxFQUFLVyxLQUFMLENBQWxCO0FBQ0E7QUFDRDs7QUFFRCxNQUFJO0FBQ0YsVUFBTW5CLFVBQVUsQ0FBQ1EsRUFBRCxFQUFLLFNBQUwsRUFBZ0JDLGFBQWhCLENBQWhCO0FBQ0QsR0FGRCxDQUVFLE9BQU9VLEtBQVAsRUFBYztBQUNkWixJQUFBQSxDQUFDLENBQUUsb0NBQW1DWSxLQUFLLENBQUNDLE9BQVEsRUFBbkQsQ0FBRDtBQUNBaEIsSUFBQUEsa0JBQWtCLENBQUNJLEVBQUQsRUFBS1csS0FBTCxDQUFsQjtBQUNEO0FBQ0YsQ0F6QkQiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuY29uc3Qgc2VuZE9yZGVycyA9IHJlcXVpcmUoJy4vc2VuZF9vcmRlcnMnKVxuY29uc3Qge1xuICBub3RpZnlJbmZvLFxuICBub3RpZnlPcmRlckNhbmNlbGxlZCxcbiAgbm90aWZ5RXJyb3JCaW5hbmNlXG59ID0gcmVxdWlyZSgnLi4vLi4vdXRpbC93cy9ub3RpZnknKVxuXG5tb2R1bGUuZXhwb3J0cyA9IGFzeW5jIChkLCB3cywgYmluYW5jZUNsaWVudCwgc3ltYm9sLCBvcmRlcklkKSA9PiB7XG4gIG5vdGlmeUluZm8od3MsICdDYW5jZWxsaW5nIG9yZGVyIG9uIEJpbmFuY2UnKVxuXG4gIHRyeSB7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgYmluYW5jZUNsaWVudC5jYW5jZWxPcmRlcih7IHN5bWJvbCwgb3JkZXJJZCB9KVxuXG4gICAgZCgnc3VjZXNzZnVsbHkgY2FuY2VsbGVlZCBvcmRlciBbYmluYW5jZV0nKVxuICAgIG5vdGlmeU9yZGVyQ2FuY2VsbGVkKHdzLCAnYmluYW5jZScsIHtcbiAgICAgIHN5bWJvbDogcmVzLnN5bWJvbCxcbiAgICAgIGFtb3VudDogcmVzLnNpZGUgPT09ICdTRUxMJyA/IC0xICogcmVzLm9yaWdRdHkgOiByZXMub3JpZ1F0eSxcbiAgICAgIHByaWNlOiByZXMucHJpY2UsXG4gICAgICB0eXBlOiByZXMudHlwZVxuICAgIH0pXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgZCgnZmFpbGVkIHRvIGNhbmNlbCBvcmRlciBbYmluYW5jZV0nKVxuICAgIG5vdGlmeUVycm9yQmluYW5jZSh3cywgZXJyb3IpXG4gICAgcmV0dXJuXG4gIH1cblxuICB0cnkge1xuICAgIGF3YWl0IHNlbmRPcmRlcnMod3MsICdiaW5hbmNlJywgYmluYW5jZUNsaWVudClcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBkKGBmYWlsZWQgdG8gc2VuZCBvcmRlcnMgW2JpbmFuY2VdOiAke2Vycm9yLm1lc3NhZ2V9YClcbiAgICBub3RpZnlFcnJvckJpbmFuY2Uod3MsIGVycm9yKVxuICB9XG59XG4iXX0=