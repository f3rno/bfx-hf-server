'use strict';

const nonce = require('../../util/nonce');
const WSClient = require('../../ws_client');

const onDataCandles = require('./on_data_candles');
const onDataSyncStart = require('./on_data_sync_start');
const onDataSyncEnd = require('./on_data_sync_end');

module.exports = class HFDSClient extends WSClient {
  constructor({ url, id, symbolTransformer = s => s }) {
    super({
      url,
      debugName: `hf-ds-${id}`,
      msgHandlers: {
        'data.candles': onDataCandles,
        'data.sync.start': onDataSyncStart,
        'data.sync.end': onDataSyncEnd } });



    this.candleRequests = {}; // [reqID]: ws
    this.candlePromises = {}; // [reqID]: p
    this.symbolTransformer = symbolTransformer;
  }

  getCandles(ws, { exID, symbol, tf, start, end }, uiMarket) {
    const reqID = `${nonce()}-${uiMarket}`;
    const finalSymbol = this.symbolTransformer(symbol);

    this.candleRequests[reqID] = ws;
    this.send(['get.candles', exID, finalSymbol, tf, 'trade', start, end, reqID]);

    return new Promise(resolve => {
      this.candlePromises[reqID] = resolve;
    });
  }};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy93c19jbGllbnRzL2hmX2RzL2luZGV4LmpzIl0sIm5hbWVzIjpbIm5vbmNlIiwicmVxdWlyZSIsIldTQ2xpZW50Iiwib25EYXRhQ2FuZGxlcyIsIm9uRGF0YVN5bmNTdGFydCIsIm9uRGF0YVN5bmNFbmQiLCJtb2R1bGUiLCJleHBvcnRzIiwiSEZEU0NsaWVudCIsImNvbnN0cnVjdG9yIiwidXJsIiwiaWQiLCJzeW1ib2xUcmFuc2Zvcm1lciIsInMiLCJkZWJ1Z05hbWUiLCJtc2dIYW5kbGVycyIsImNhbmRsZVJlcXVlc3RzIiwiY2FuZGxlUHJvbWlzZXMiLCJnZXRDYW5kbGVzIiwid3MiLCJleElEIiwic3ltYm9sIiwidGYiLCJzdGFydCIsImVuZCIsInVpTWFya2V0IiwicmVxSUQiLCJmaW5hbFN5bWJvbCIsInNlbmQiLCJQcm9taXNlIiwicmVzb2x2ZSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsa0JBQUQsQ0FBckI7QUFDQSxNQUFNQyxRQUFRLEdBQUdELE9BQU8sQ0FBQyxpQkFBRCxDQUF4Qjs7QUFFQSxNQUFNRSxhQUFhLEdBQUdGLE9BQU8sQ0FBQyxtQkFBRCxDQUE3QjtBQUNBLE1BQU1HLGVBQWUsR0FBR0gsT0FBTyxDQUFDLHNCQUFELENBQS9CO0FBQ0EsTUFBTUksYUFBYSxHQUFHSixPQUFPLENBQUMsb0JBQUQsQ0FBN0I7O0FBRUFLLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixNQUFNQyxVQUFOLFNBQXlCTixRQUF6QixDQUFrQztBQUNqRE8sRUFBQUEsV0FBVyxDQUFFLEVBQUVDLEdBQUYsRUFBT0MsRUFBUCxFQUFXQyxpQkFBaUIsR0FBR0MsQ0FBQyxJQUFJQSxDQUFwQyxFQUFGLEVBQTJDO0FBQ3BELFVBQU07QUFDSkgsTUFBQUEsR0FESTtBQUVKSSxNQUFBQSxTQUFTLEVBQUcsU0FBUUgsRUFBRyxFQUZuQjtBQUdKSSxNQUFBQSxXQUFXLEVBQUU7QUFDWCx3QkFBZ0JaLGFBREw7QUFFWCwyQkFBbUJDLGVBRlI7QUFHWCx5QkFBaUJDLGFBSE4sRUFIVCxFQUFOOzs7O0FBVUEsU0FBS1csY0FBTCxHQUFzQixFQUF0QixDQVhvRCxDQVczQjtBQUN6QixTQUFLQyxjQUFMLEdBQXNCLEVBQXRCLENBWm9ELENBWTNCO0FBQ3pCLFNBQUtMLGlCQUFMLEdBQXlCQSxpQkFBekI7QUFDRDs7QUFFRE0sRUFBQUEsVUFBVSxDQUFFQyxFQUFGLEVBQU0sRUFBRUMsSUFBRixFQUFRQyxNQUFSLEVBQWdCQyxFQUFoQixFQUFvQkMsS0FBcEIsRUFBMkJDLEdBQTNCLEVBQU4sRUFBd0NDLFFBQXhDLEVBQWtEO0FBQzFELFVBQU1DLEtBQUssR0FBSSxHQUFFMUIsS0FBSyxFQUFHLElBQUd5QixRQUFTLEVBQXJDO0FBQ0EsVUFBTUUsV0FBVyxHQUFHLEtBQUtmLGlCQUFMLENBQXVCUyxNQUF2QixDQUFwQjs7QUFFQSxTQUFLTCxjQUFMLENBQW9CVSxLQUFwQixJQUE2QlAsRUFBN0I7QUFDQSxTQUFLUyxJQUFMLENBQVUsQ0FBQyxhQUFELEVBQWdCUixJQUFoQixFQUFzQk8sV0FBdEIsRUFBbUNMLEVBQW5DLEVBQXVDLE9BQXZDLEVBQWdEQyxLQUFoRCxFQUF1REMsR0FBdkQsRUFBNERFLEtBQTVELENBQVY7O0FBRUEsV0FBTyxJQUFJRyxPQUFKLENBQWFDLE9BQUQsSUFBYTtBQUM5QixXQUFLYixjQUFMLENBQW9CUyxLQUFwQixJQUE2QkksT0FBN0I7QUFDRCxLQUZNLENBQVA7QUFHRCxHQTNCZ0QsQ0FBbkQiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuY29uc3Qgbm9uY2UgPSByZXF1aXJlKCcuLi8uLi91dGlsL25vbmNlJylcbmNvbnN0IFdTQ2xpZW50ID0gcmVxdWlyZSgnLi4vLi4vd3NfY2xpZW50JylcblxuY29uc3Qgb25EYXRhQ2FuZGxlcyA9IHJlcXVpcmUoJy4vb25fZGF0YV9jYW5kbGVzJylcbmNvbnN0IG9uRGF0YVN5bmNTdGFydCA9IHJlcXVpcmUoJy4vb25fZGF0YV9zeW5jX3N0YXJ0JylcbmNvbnN0IG9uRGF0YVN5bmNFbmQgPSByZXF1aXJlKCcuL29uX2RhdGFfc3luY19lbmQnKVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNsYXNzIEhGRFNDbGllbnQgZXh0ZW5kcyBXU0NsaWVudCB7XG4gIGNvbnN0cnVjdG9yICh7IHVybCwgaWQsIHN5bWJvbFRyYW5zZm9ybWVyID0gcyA9PiBzIH0pIHtcbiAgICBzdXBlcih7XG4gICAgICB1cmwsXG4gICAgICBkZWJ1Z05hbWU6IGBoZi1kcy0ke2lkfWAsXG4gICAgICBtc2dIYW5kbGVyczoge1xuICAgICAgICAnZGF0YS5jYW5kbGVzJzogb25EYXRhQ2FuZGxlcyxcbiAgICAgICAgJ2RhdGEuc3luYy5zdGFydCc6IG9uRGF0YVN5bmNTdGFydCxcbiAgICAgICAgJ2RhdGEuc3luYy5lbmQnOiBvbkRhdGFTeW5jRW5kXG4gICAgICB9XG4gICAgfSlcblxuICAgIHRoaXMuY2FuZGxlUmVxdWVzdHMgPSB7fSAvLyBbcmVxSURdOiB3c1xuICAgIHRoaXMuY2FuZGxlUHJvbWlzZXMgPSB7fSAvLyBbcmVxSURdOiBwXG4gICAgdGhpcy5zeW1ib2xUcmFuc2Zvcm1lciA9IHN5bWJvbFRyYW5zZm9ybWVyXG4gIH1cblxuICBnZXRDYW5kbGVzICh3cywgeyBleElELCBzeW1ib2wsIHRmLCBzdGFydCwgZW5kIH0sIHVpTWFya2V0KSB7XG4gICAgY29uc3QgcmVxSUQgPSBgJHtub25jZSgpfS0ke3VpTWFya2V0fWBcbiAgICBjb25zdCBmaW5hbFN5bWJvbCA9IHRoaXMuc3ltYm9sVHJhbnNmb3JtZXIoc3ltYm9sKVxuXG4gICAgdGhpcy5jYW5kbGVSZXF1ZXN0c1tyZXFJRF0gPSB3c1xuICAgIHRoaXMuc2VuZChbJ2dldC5jYW5kbGVzJywgZXhJRCwgZmluYWxTeW1ib2wsIHRmLCAndHJhZGUnLCBzdGFydCwgZW5kLCByZXFJRF0pXG5cbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgIHRoaXMuY2FuZGxlUHJvbWlzZXNbcmVxSURdID0gcmVzb2x2ZVxuICAgIH0pXG4gIH1cbn1cbiJdfQ==